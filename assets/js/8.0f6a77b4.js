(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{362:function(v,t,_){"use strict";_.r(t);var i=_(42),l=Object(i.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"java基础知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#java基础知识"}},[v._v("#")]),v._v(" Java基础知识")]),v._v(" "),_("h2",{attrs:{id:"基本数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[v._v("#")]),v._v(" 基本数据类型")]),v._v(" "),_("ol",[_("li",[v._v("数值型:\n"),_("ul",[_("li",[v._v("byte  1 字节 8位 -128~127")]),v._v(" "),_("li",[v._v("short 2 字节 16位 -32768~32767")]),v._v(" "),_("li",[v._v("int   4字节  32位 -2^31~2^31-1")]),v._v(" "),_("li",[v._v("long  8字节  64位 -2^63~2^63-1")])])]),v._v(" "),_("li",[v._v("浮点类型:\n"),_("ul",[_("li",[v._v("float 4字节  32位")]),v._v(" "),_("li",[v._v("double 8字节 64位")])])]),v._v(" "),_("li",[v._v("字符型:\n"),_("ul",[_("li",[v._v("char 2字节 16位0~65535")])])]),v._v(" "),_("li",[v._v("布尔型:\n"),_("ul",[_("li",[v._v("boolean")])])])]),v._v(" "),_("h2",{attrs:{id:"引用类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引用类型"}},[v._v("#")]),v._v(" 引用类型")]),v._v(" "),_("ol",[_("li",[v._v("字符串 String")]),v._v(" "),_("li",[v._v("类    class")]),v._v(" "),_("li",[v._v("枚举  enum")]),v._v(" "),_("li",[v._v("接口  interface")])]),v._v(" "),_("h2",{attrs:{id:"标志符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#标志符"}},[v._v("#")]),v._v(" 标志符")]),v._v(" "),_("ol",[_("li",[v._v("命名规则:\n"),_("ul",[_("li",[v._v("由字母,下划线,数字,和美元符号组成, 不能以数字开头, 大小写敏感, 关键字和保留字不能使用")])])]),v._v(" "),_("li",[v._v("驼峰规则:\n"),_("ul",[_("li",[v._v("类名: 首字母大写, 每个单词首字母大写")]),v._v(" "),_("li",[v._v("方法名, 参数名, 变量名: 首字母小写, 其余字母首字母大写")]),v._v(" "),_("li",[v._v("包名: 小写")])])])]),v._v(" "),_("h2",{attrs:{id:"修饰符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[v._v("#")]),v._v(" 修饰符")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[v._v("java中有专门的关键字作为修饰符,控制访问权限, 不同于python,go等语言(python下划线, go用首字母大小写控制)    \n")])])]),_("ol",[_("li",[v._v("public: 对所以类可见, 使用对象: 接口,类,变量,方法")]),v._v(" "),_("li",[v._v("private: 同一类可见, 使用对象: 变量和方法")]),v._v(" "),_("li",[v._v("default: (默认不写) 同一包类可见, 使用对象:类,接口,变量,方法")]),v._v(" "),_("li",[v._v("protected: 同一包内的类和子孙类可见, 使用对象: 变量,方法")])]),v._v(" "),_("h2",{attrs:{id:"关键字"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[v._v("#")]),v._v(" 关键字")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("static:")]),v._v(" "),_("ul",[_("li",[v._v("static方法就是没有this的方法, 在static方法内部是不能调用非静态方法, 反过来是可以的, 没有创建对象的前提下, 仅仅可以通过类本身去调用static方法. 方便了在没有创建对象的情况下, 调用方法和变量.")]),v._v(" "),_("li",[v._v("static变量也称作静态变量，静态变量和非静态变量的区别是：静态变量被所有的对象所共享，在内存中只有一个副本，它当且仅当在类初次加载时会被初始化。而非静态变量是对象所拥有的，在创建对象的时候被初始化，存在多个副本，各个对象拥有的副本互不影响。static成员变量的初始化顺序按照定义的顺序进行初始化。")]),v._v(" "),_("li",[v._v("static关键字还有一个比较关键的作用就是用来形成静态代码块以优化程序性能。static块可以置于类中的任何地方，类中可以有多个static块。在类初次被加载的时候，会按照static块的顺序来执行每个static块，并且只会执行一次。")])])]),v._v(" "),_("li",[_("p",[v._v("this:")]),v._v(" "),_("ul",[_("li",[v._v("在程序中产生二义性之处，应使用this来指明当前对象;普通方法中，this总是指向调用该方法的对象。构造方法中，this总是指向正要初始化的对象。")]),v._v(" "),_("li",[v._v("使用this关键字调用重载的构造方法，避免相同的初始化代码。但只能在构造方法中用，并且必须位于构造方法的第一句。")]),v._v(" "),_("li",[v._v("this不能用于static方法中。")]),v._v(" "),_("li",[v._v("调用属性和方法")]),v._v(" "),_("li",[v._v("在构造方法中,this(); 括号内参数个数,顺序,类型根据调用的方法来决定.")]),v._v(" "),_("li",[v._v("当全局变量和局部变量有重名字的时候，用this来区分。")])])]),v._v(" "),_("li",[_("p",[v._v("final:")]),v._v(" "),_("ul",[_("li",[v._v("这个关键字是一个修饰符，可以修饰类，方法，变量。")]),v._v(" "),_("li",[v._v("被final修饰的类是一个最终类，不可以被继承。")]),v._v(" "),_("li",[v._v("被final修饰的方法是一个最终方法，不可以被覆盖。")]),v._v(" "),_("li",[v._v("被final修饰的变量是一个常量，只能赋值一次。")])])]),v._v(" "),_("li",[_("p",[v._v("abstract:")]),v._v(" "),_("ul",[_("li",[v._v("抽象方法只能定义在抽象类中，抽象类和抽象方法必须由abstract关键字修饰（可以描述类和方法，不可以描述变量）。")]),v._v(" "),_("li",[v._v("抽象方法只定义方法声明，并不定义方法实现。")]),v._v(" "),_("li",[v._v("抽象类不可以被创建对象(实例化)。")]),v._v(" "),_("li",[v._v("只有通过子类继承抽象类并覆盖了抽象类中的所有抽象方法后，该子类才可以实例化。否则，该子类还是一个抽象类。")])])])])])}),[],!1,null,null,null);t.default=l.exports}}]);